name: Main push workflow
on:
  push:
    branches:
      - main
jobs:
  test:
    name: Ejecutar pruebas
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup Node
        uses: actions/setup-node@v3.9.1
        with:
          node-version: '22'

      - name: Instalar pnpm
        run: |
          npm install --global corepack@latest
          corepack enable pnpm          

      - name: Instalar dependencias
        run: pnpm install

      - name: Ejecutar tests
        run: pnpm test

      - name: Post failure to Slack
        if: failure()
        uses: slackapi/slack-github-action@v2.1.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            text: "*Push a `${{ github.ref_name }}`*\n\n ‚ùå *Fallaron los tests en* `${{ github.repository }}`"
            attachments: [
              {
                "text": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Ver logs de la ejecucion>"
              }
            ]
  
  
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Instalar pnpm
        run: |
          npm install --global corepack@latest
          corepack enable pnpm          

      - name: Instalar dependencias
        run: pnpm install

      - name: Obtener coverage
        run: pnpm test --coverage

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  
  deploy:
    runs-on: ubuntu-latest
    environment: staging
    timeout-minutes: 60
    needs: [test, sonarqube] #Para desplegar necesito que los jobs anteriores terminen con exito.
    if: success()
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Instalar pnpm
        run: |
          npm install --global corepack@latest
          corepack enable pnpm  

      - name: Build
        run: |
          pnpm install
          pnpm build
        
      - name: Build & Deploy Worker
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          wranglerVersion: "4.16.1"
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env staging #Despliega en staging

      - name: Post success to Slack
        if: success()
        uses: slackapi/slack-github-action@v2.1.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            text: "üöÄ *Deploy exitoso a `staging`* desde `${{ github.repository }}`\n\n*Commit:* `${{ github.event.head_commit.id }}` ${{ github.event.head_commit.message }}"
            attachments: [
              {
                "text": "<${{ steps.deploy.outputs.deployment-url }}|Visitar el sitio desplegado>"
              }
            ]

      - name: Post failure to Slack
        if: failure()
        uses: slackapi/slack-github-action@v2.1.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            text: "‚ùå *Fallo el deploy a `staging`* en `${{ github.repository }}`"
            attachments: [
              {
                "text": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Ver logs de la ejecucion>"
              }
            ]
