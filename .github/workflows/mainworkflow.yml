name: Main push workflow
on:
  push:
    branches:
      - main
jobs:
  test:
    name: Ejecutar pruebas
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup Node
        uses: actions/setup-node@v3.9.1
        with:
          node-version: '22'

      - name: Instalar pnpm
        run: |
          npm install --global corepack@latest
          corepack enable pnpm          

      - name: Instalar dependencias
        run: pnpm install

      - name: Ejecutar tests
        run: pnpm test
  
  
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  
  deploy:
    runs-on: ubuntu-latest
    environment: staging
    timeout-minutes: 60
    needs: [test, sonarqube] #Para desplegar necesito que los jobs anteriores terminen con exito.
    if: success()
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Instalar pnpm
        run: |
          npm install --global corepack@latest
          corepack enable pnpm  
        
      - name: Build & Deploy Worker
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env staging #Despliega en staging
